/*
import java.sql.SQLException;
import java.util.ArrayList;
import org.apache.commons.math3.stat.inference.OneWayAnova;

public class Query5 {

	static RUN_QUERY runObj = new   RUN_QUERY ();
	static ArrayList<double[]> col;

	static double[] sample_1;
	static double[] sample_2;
	static double[] sample_3;
	static double[] sample_4;

	public static void main(String[] args ) throws SQLException  {	   

		col=new ArrayList<double[]>();

		String sqlQuery_1 = 
			" SELECT (MF.EXP) FROM CLINICAL_FACT CF INNER JOIN MICROARRAY_FACT MF ON CF.S_ID=MF.S_ID WHERE CF.S_ID IN " +
			" (SELECT DISTINCT S_ID FROM CLINICAL_FACT WHERE P_ID IN (SELECT P_ID FROM CLINICAL_FACT WHERE DS_ID IN" + 
			" (SELECT DS_ID FROM DISEASE WHERE NAME='ALL')) AND S_ID IS NOT NULL) AND MF.PB_ID IN (SELECT MF.PB_ID FROM" +
			" MICROARRAY_FACT MF INNER JOIN PROBE PB ON MF.PB_ID=PB.PB_ID WHERE PB.PB_ID IN (SELECT PB.PB_ID FROM " + 
			"PROBE PB INNER JOIN GENE_FACT GF ON PB.U_ID=GF.GENE_UID WHERE GF.GENE_UID IN (SELECT GF.GENE_UID FROM " +
			"GENE_FACT GF WHERE GO_ID=0007154)))";

		String sqlQuery_2 = 
			" SELECT (MF.EXP) FROM CLINICAL_FACT CF INNER JOIN MICROARRAY_FACT MF ON CF.S_ID=MF.S_ID WHERE CF.S_ID IN " +
			" (SELECT DISTINCT S_ID FROM CLINICAL_FACT WHERE P_ID IN (SELECT P_ID FROM CLINICAL_FACT WHERE DS_ID IN" + 
			" (SELECT DS_ID FROM DISEASE WHERE NAME='AML')) AND S_ID IS NOT NULL) AND MF.PB_ID IN (SELECT MF.PB_ID FROM" +
			" MICROARRAY_FACT MF INNER JOIN PROBE PB ON MF.PB_ID=PB.PB_ID WHERE PB.PB_ID IN (SELECT PB.PB_ID FROM " + 
			"PROBE PB INNER JOIN GENE_FACT GF ON PB.U_ID=GF.GENE_UID WHERE GF.GENE_UID IN (SELECT GF.GENE_UID FROM " +
			"GENE_FACT GF WHERE GO_ID=0007154)))";

		String sqlQuery_3= 
			" SELECT (MF.EXP) FROM CLINICAL_FACT CF INNER JOIN MICROARRAY_FACT MF ON CF.S_ID=MF.S_ID WHERE CF.S_ID IN " +
			" (SELECT DISTINCT S_ID FROM CLINICAL_FACT WHERE P_ID IN (SELECT P_ID FROM CLINICAL_FACT WHERE DS_ID IN" + 
			" (SELECT DS_ID FROM DISEASE WHERE NAME='Colon tumor')) AND S_ID IS NOT NULL) AND MF.PB_ID IN (SELECT MF.PB_ID FROM" +
			" MICROARRAY_FACT MF INNER JOIN PROBE PB ON MF.PB_ID=PB.PB_ID WHERE PB.PB_ID IN (SELECT PB.PB_ID FROM " + 
			"PROBE PB INNER JOIN GENE_FACT GF ON PB.U_ID=GF.GENE_UID WHERE GF.GENE_UID IN (SELECT GF.GENE_UID FROM " +
			"GENE_FACT GF WHERE GO_ID=0007154)))";

		String sqlQuery_4=
			" SELECT (MF.EXP) FROM CLINICAL_FACT CF INNER JOIN MICROARRAY_FACT MF ON CF.S_ID=MF.S_ID WHERE CF.S_ID IN " +
			" (SELECT DISTINCT S_ID FROM CLINICAL_FACT WHERE P_ID IN (SELECT P_ID FROM CLINICAL_FACT WHERE DS_ID IN" + 
			" (SELECT DS_ID FROM DISEASE WHERE NAME='Breast tumor')) AND S_ID IS NOT NULL) AND MF.PB_ID IN (SELECT MF.PB_ID FROM" +
			" MICROARRAY_FACT MF INNER JOIN PROBE PB ON MF.PB_ID=PB.PB_ID WHERE PB.PB_ID IN (SELECT PB.PB_ID FROM " + 
			"PROBE PB INNER JOIN GENE_FACT GF ON PB.U_ID=GF.GENE_UID WHERE GF.GENE_UID IN (SELECT GF.GENE_UID FROM " +
			"GENE_FACT GF WHERE GO_ID=0007154)))";

		sample_1 = runObj.runQuery( sqlQuery_1 );
		sample_2 = runObj.runQuery( sqlQuery_2 );
		sample_3 = runObj.runQuery( sqlQuery_3 );
		sample_4 = runObj.runQuery( sqlQuery_4 );


		col.add(sample_1);
		col.add(sample_2);
		col.add(sample_3);
		col.add(sample_4);

		OneWayAnova fstat =new OneWayAnova();
		double result = fstat.anovaFValue(col);
		System.out.println(result);
		System.out.println("Goodbye!");
	}

}
*/
